{"version":3,"sources":["NavBar.jsx","Home.jsx","GlobalStyles.js","theme.js","App.jsx","serviceWorker.js","index.js"],"names":["Container","styled","div","theme","colors","fireOpal","alabaster","Navbar","src","alt","HomeContainer","font","weight","medium","onyx","normal","size","xs","xxs","breakpoints","mb","Home","className","href","target","rel","GlobalStyles","createGlobalStyle","sunray","default","family","xl","l","m","s","light","semiBold","bold","extraBold","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qiBAGA,IAAMA,EAAYC,IAAOC,IAAV,KAOO,qBAAGC,MAAkBC,OAAOC,YAGnB,qBAAGF,MAAkBC,OAAOE,aAe5CC,MARf,WACE,OACE,kBAACP,EAAD,KACE,yBAAKQ,IAAI,YAAYC,IAAI,W,wpCCnB/B,IAAMC,EAAgBT,IAAOC,IAAV,KAUA,qBAAGC,MAAkBQ,KAAKC,OAAOC,UAGvC,qBAAGV,MAAkBC,OAAOU,QAOtB,qBAAGX,MAAkBQ,KAAKC,OAAOG,UACnC,qBAAGZ,MAAkBQ,KAAKK,KAAKC,MACnC,qBAAGd,MAAkBC,OAAOU,QAOtB,qBAAGX,MAAkBQ,KAAKC,OAAOG,UACnC,qBAAGZ,MAAkBQ,KAAKK,KAAKE,OACnC,qBAAGf,MAAkBC,OAAOU,QAyBhB,qBAAGX,MAAkBgB,YAAYC,MAgD3CC,MAxCf,WACE,OACE,kBAACX,EAAD,KACE,yBAAKY,UAAU,QAAf,cACA,yBAAKA,UAAU,YAAf,iCACA,yBAAKA,UAAU,YAAf,iCACA,yBAAKA,UAAU,eACb,mFACA,8DACA,0EACA,wEACA,iDAEF,yBAAKA,UAAU,iBACb,uBACEC,KAAK,6DACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGH,UAAU,oBAEf,uBACEC,KAAK,8CACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGH,UAAU,oBAEf,uBACEC,KAAK,wCACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAGH,UAAU,qB,kLCnGvB,IASeI,EATMC,YAAH,KAKM,qBAAGxB,MAAkBC,OAAOE,aC6BrCH,EApCD,CACZC,OAAQ,CACNC,SAAU,UACVuB,OAAQ,UACRtB,UAAW,UACXQ,KAAM,WAGRK,YAAa,CACXC,GAAI,SAGNT,KAAM,CACJkB,QAAS,kCACTC,OAAQ,+BAERd,KAAM,CACJe,GAAI,OACJC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHjB,GAAI,OACJC,IAAK,QAGPN,OAAQ,CACNuB,MAAO,MACPpB,OAAQ,MACRF,OAAQ,MACRuB,SAAU,MACVC,KAAM,MACNC,UAAW,S,4ICrBjB,IAAMC,EAAetC,IAAOC,IAAV,KAiBHsC,MAXf,WACE,OACE,kBAAC,IAAD,CAAerC,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAACoC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCVYE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d4f1e66.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n  max-height: 8vh;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.fireOpal};\n  transition: all 0.7s ease-in;\n  position: fixed;\n  box-shadow: 0 4px 2px -2px ${({ theme }) => theme.colors.alabaster};\n\n  img {\n    width: 120px;\n  }\n`\n\nfunction Navbar() {\n  return (\n    <Container>\n      <img src=\"/logo.png\" alt=\"logo\" />\n    </Container>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport styled from 'styled-components'\n\n//#region styles\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  width: 100%;\n\n  .name {\n    font-family: 'Montserrat';\n    font-weight: ${({ theme }) => theme.font.weight.medium};\n    font-size: 60px;\n    padding: 10px;\n    color: ${({ theme }) => theme.colors.onyx};\n    text-align: center;\n  }\n\n  .subtitle {\n    padding: 10px;\n    font-family: 'Montserrat';\n    font-weight: ${({ theme }) => theme.font.weight.normal};\n    font-size: ${({ theme }) => theme.font.size.xs};\n    color: ${({ theme }) => theme.colors.onyx};\n    line-height: 30px;\n    text-align: center;\n  }\n\n  .description {\n    font-family: 'Montserrat';\n    font-weight: ${({ theme }) => theme.font.weight.normal};\n    font-size: ${({ theme }) => theme.font.size.xxs};\n    color: ${({ theme }) => theme.colors.onyx};\n    line-height: 30px;\n    text-align: center;\n    width: 340px;\n  }\n\n  .contact-icons {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n  }\n\n  .fa {\n    padding: 20px;\n    margin: 10px;\n    font-size: 30px;\n    width: 60px;\n    text-align: center;\n    text-decoration: none;\n    color: #313638;\n    &:hover {\n      color: #e4b363;\n    }\n    @media (max-width: ${({ theme }) => theme.breakpoints.mb}) {\n      width: 30px;\n      padding: 15px;\n    }\n  }\n`\n//#endregion\n\nfunction Home() {\n  return (\n    <HomeContainer>\n      <div className=\"name\">Ing·rid</div>\n      <div className=\"subtitle\">[ˈɪŋɡrit]</div>\n      <div className=\"subtitle\">a name, from Old Norse: Ingvi</div>\n      <div className=\"description\">\n        <div>1. Paulista based in Berlin; 2. Frontend Engineer;</div>\n        <div>3. Can do some Design things;</div>\n        <div>4. Brings people together; 5. Photogenic;</div>\n        <div>6. Mother of plants; 7. Popcorn lover; </div>\n        <div>8. Craftswoman.</div>\n      </div>\n      <div className=\"contact-icons\">\n        <a\n          href=\"mailto:ingriddorio@gmail.com?subject=Olá! Hello! Hallo!\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fa fa-envelope\"></i>\n        </a>\n        <a\n          href=\"https://linkedin.com/in/ingriddorioschulze/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fa fa-linkedin\"></i>\n        </a>\n        <a\n          href=\"https://github.com/ingriddorioschulze\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fa fa-github\"></i>\n        </a>\n      </div>\n    </HomeContainer>\n  )\n}\n\nexport default Home\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    background-color: ${({ theme }) => theme.colors.alabaster};\n\n  }\n`\nexport default GlobalStyles\n","const theme = {\n  colors: {\n    fireOpal: '#ef6461',\n    sunray: '#e4b363',\n    alabaster: '#e0dfd5',\n    onyx: '#313638',\n  },\n\n  breakpoints: {\n    mb: '420px',\n  },\n\n  font: {\n    default: 'normal normal normal Montserrat',\n    family: ' Montserrat, Calibri, Arial,',\n\n    size: {\n      xl: '35px',\n      l: '28px',\n      m: '20px',\n      s: '18px',\n      xs: '16px',\n      xxs: '14px',\n    },\n\n    weight: {\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semiBold: '600',\n      bold: '700',\n      extraBold: '800',\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport styled from 'styled-components'\n\nimport Navbar from './NavBar'\nimport Home from './Home'\n\nimport GlobalStyles from './GlobalStyles'\nimport theme from './theme'\n\nconst AppContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <AppContainer>\n        <Navbar />\n        <Home />\n      </AppContainer>\n    </ThemeProvider>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}